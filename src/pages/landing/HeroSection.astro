---
import Image from "astro/components/Image.astro";
import ReviewComponent from "../../components/ui/blocks/ReviewComponent.astro";
import PrimaryCTA from "../../components/ui/buttons/PrimaryCTA.astro";
import SecondaryCTA from "../../components/ui/buttons/secondaryCTA.astro";

const {
  title,
  subTitle,
  primaryBtn,
  primaryBtnUrl,
  secondaryBtn,
  secondaryBtnUrl,
  withReview,
  avatars,
  starCount,
  rating,
  reviews,
  src,
  alt,
} = Astro.props;

// Defininos las interfaces de las props

interface Props {
  title?: string;
  subTitle?: string;
  primaryBtn?: string;
  primaryBtnUrl?: string;
  secondaryBtn?: string;
  secondaryBtnUrl?: string;
  withReview?: boolean;
  avatars?: Array<string>;
  starCount?: number;
  rating?: string;
  reviews?: string;
  src?: any;
  alt?: string;
}
---

<!-- Definimos un contenedor de cuadricula para todos los elementos -->
<section
  class="mx-auto grid max-w-[85rem] gap-4 px-4 py-14 sm:px-6 md:grid-cols-2 md:items-center md:gap-8 lg:px-8 2xl:max-w-full"
>
  <!-- Titulo y descripción -->
  <div>
    <!-- Cada etiqueta h1 y p representa una porción del titulo y subtitulo definido -->
    <h1
      class="block text-balance text-3xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 sm:text-4xl lg:text-6xl lg:leading-tight"
    >
      <!-- Acerca de los fragmentos https://docs.astro.build/es/reference/astro-syntax/#fragments -->
      <Fragment set:html={title} />
    </h1>
    {
      subTitle && (
        <p class="mt-3 text-pretty text-lg leading-relaxed text-neutral-700 dark:text-neutral-400 lg:w-4/5">
          {subTitle}
        </p>
      )
    }
    <!-- Esta section incluye dos cts cada uno con diferente url -->
    <div class="mt-7 grid w-full gap-3 sm:inline-flex">
      {primaryBtn && <PrimaryCTA title={primaryBtn} url={primaryBtn} />}
      {
        secondaryBtn && (
          <SecondaryCTA title={secondaryBtn} url={secondaryBtnUrl} />
        )
      }
    </div>

    <!-- Section de reseñas: Esta section presenta avatares, reviews, ratings y numero de reviews -->

    {
      withReview ? (
        <ReviewComponent
          avatars={avatars}
          starCount={starCount}
          rating={rating}
          reviews={reviews}
        />
      ) : (
        ""
      )
    }
  </div>
  <!-- Imagen del hero section -->
  <div class="flex w-full">
    <div class="top-12 overflow-hidden">
      {
        src && alt && (
          <Image
            src={src}
            alt={alt}
            class="h-full w-full scale-110 object-cover object-center"
            draggable="false"
            loading={"eager"}
            format={"avif"}
          />
        )
      }
    </div>
  </div>
</section>
